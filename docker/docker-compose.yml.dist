# The users of the host machine are shared with the ones of the container
# and the apache server run with the current host user ($USER)
# this avoid grant conflict if you run the command in the container with:
#   docker-compose exec -u `echo $UID` app /bin/bash
version: '3'
services:
    phpapache:     
        build: ./docker/phpapache
        ports:
            - 8030:80
        volumes:
            - .:/home/app    
            - /home/$USER:/home/$USER
            - /etc/passwd:/etc/passwd:ro
            - /etc/group:/etc/group:ro
        environment:
            APACHE_DOCUMENT_ROOT: /home/app/public
            APACHE_RUN_USER: $USER
            APACHE_RUN_GROUP: $USER    
            PHP_MEMORY_LIMIT: 512M
        tmpfs:
            - /home/var/cache
        env_file:
            - .env
        tty: true
        working_dir: /home/app
    nodejs:
        image: node:12.13.0
        ports:
            # if serving asset via webpack dev server
            - 8032:8032
        volumes:
            - .:/home/app    
            - /home/$USER:/home/$USER
            - /etc/passwd:/etc/passwd:ro
            - /etc/group:/etc/group:ro
        command: ['node']
        tty: true
        working_dir: /home/app
        command: [ "/bin/bash" ]
        environment: 
            - CHOKIDAR_USEPOLLING=true
        # non fonctionnel
        #entrypoint: "yarn encore dev-server --hot --host 0.0.0.0 --port 8032"
    mysql:
        image: mysql/mysql-server:5.7
        volumes:  
            - ./var/lib_mysql:/var/lib/mysql
            - ./var/etc_mysql:/etc/mysql
        env_file:
            - .env
    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        env_file:
            - .env
        ports:
            - 8031:80
        env_file:
            - .env
    apache:
        image: httpd:2.4
        ports:
            - 8034:80
        volumes:
            # enable modules proxy_http, proxy_fcgi, etc... 
            # redirect .php request to phpfpm container port 9000
            # other requests (for static files as css) are directly hosted by this container
            - ./docker/apache_fpm_config/httpd.conf:/usr/local/apache2/conf/httpd.conf
            # public files are served directly by apache
            - ./public:/usr/local/apache2/htdocs/
    phpfpm:
        build: ./docker/phpfpm     
        volumes:
            - .:/home/app    
            - /home/$USER:/home/$USER
            - /etc/passwd:/etc/passwd:ro
            - /etc/group:/etc/group:ro
        tmpfs:
            - /home/var/cache
        env_file:
            - .env
        tty: true
        working_dir: /home/app